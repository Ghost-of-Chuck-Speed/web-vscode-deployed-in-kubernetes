# Secrets for SSL Certificates for each developer
{{- $devCount := .Values.developerCount | int }}
{{- range $i := until $devCount }}
apiVersion: v1
kind: Secret
metadata:
  name: code-server-developer{{ add $i 1 }}-tls
  namespace: coder
type: kubernetes.io/tls
data:
  tls.crt: ###
  tls.key: ###
{{- end }}

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: code-server-ingress
#   annotations:
# nginx.ingress.kubernetes.io/auth-type: basic
# nginx.ingress.kubernetes.io/auth-secret: your-auth-secret
# nginx.ingress.kubernetes.io/auth-realm: "Protected Area"
# spec:
#   ingressClassName: nginx
#   tls:
#     {{- range $i := until $devCount }}
#     - hosts:
#         - {{ $.Values.nginx.domain }}  # Use $ to access top-level Values
#       secretName: code-server-developer{{ add $i 1 }}-tls
#     {{- end }}
#   rules:
#     {{- range $i := until $devCount }}
#     - host: "{{ $.Values.nginx.domain }}"  # Use $ to access top-level Values
#       http:
#         paths:
#           - path: /developer{{ add $i 1 }}  # Hard-coded path for each developer
#             pathType: Prefix
#             backend:
#               service:
#                 name: code-server-developer{{ add $i 1 }}
#                 port:
#                   number: 8443
#     {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: code-server-ingress
  annotations:
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: your-auth-secret
    # nginx.ingress.kubernetes.io/auth-realm: "Protected Area"
spec:
  ingressClassName: nginx
  rules:
    {{- range $i := until $devCount }}
    - host: "{{ $.Values.nginx.domain }}"  # Use $ to access top-level Values
      http:
        paths:
          - path: /developer{{ add $i 1 }}  # Hard-coded path for each developer
            pathType: Prefix
            backend:
              service:
                name: code-server-developer{{ add $i 1 }}
                port:
                  number: 80  # Change to 80 for HTTP traffic
    {{- end }}

---
# Persistent Volume for Shared Storage
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-pv
spec:
  capacity:
    storage: {{ .Values.sharedStorageSize }} 
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/shared-storage 

---
# Persistent Volumes for Developers
{{- range $i := until $devCount }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: developer{{ add $i 1 }}-pv
spec:
  capacity:
    storage: {{ $.Values.individualStorageSize }}  # Accessing from top-level scope
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/developer{{ add $i 1 }}
{{- end }}


---
# Persistent Volume Claims for Developers
{{- range $i := until $devCount }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: developer{{ add $i 1 }}-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $.Values.individualStorageSize }}  # Accessing from top-level scope
{{- end }}


---
# Persistent Volume Claims for Shared Storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.sharedStorageSize }} 

---
# Deployments and Services for Each Developer
{{- range $i := until $devCount }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server-developer{{ add $i 1 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: code-server-developer{{ add $i 1 }}
  template:
    metadata:
      labels:
        app: code-server-developer{{ add $i 1 }}
    spec:
      containers:
      - name: code-server
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}  # Updated to use top-level scope
        ports:
        - containerPort: 8443
        env:
        - name: PASSWORD
          value: "password"
        volumeMounts:
        - mountPath: /path/to/developer-storage
          name: developer-storage
        - mountPath: /path/to/shared
          name: shared-storage
      volumes:
      - name: developer-storage
        persistentVolumeClaim:
          claimName: developer{{ add $i 1 }}-pvc
      - name: shared-storage
        persistentVolumeClaim:
          claimName: shared-pvc
      
---
apiVersion: v1
kind: Service
metadata:
  name: code-server-developer{{ add $i 1 }}
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8443
  selector:
    app: code-server-developer{{ add $i 1 }}
{{- end }}
